<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nixer.nprox.dao.UserNotebookDao">

    <resultMap type="com.nixer.nprox.entity.swarm.UserNotebook" id="UserNotebookMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
        <result property="remarks" column="remarks" jdbcType="VARCHAR"/>
        <result property="createDate" column="create_date" jdbcType="TIMESTAMP"/>
        <result property="userid" column="userid" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UserNotebookMap">
        select id,
               address,
               remarks,
               create_date,
               userid
        from nprox.user_notebook
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserNotebookMap">
        select id,
               address,
               remarks,
               create_date,
               userid
        from nprox.user_notebook limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="UserNotebookMap">
        select
        id, address, remarks, create_date, userid
        from nprox.user_notebook
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="address != null and address != ''">
                and address = #{address}
            </if>
            <if test="remarks != null and remarks != ''">
                and remarks = #{remarks}
            </if>
            <if test="createDate != null">
                and create_date = #{createDate}
            </if>
            <if test="userid != null">
                and userid = #{userid}
            </if>
        </where>
    </select>
    <select id="userNoteBookList" resultType="com.nixer.nprox.entity.swarm.dto.NoteBookDto">
        SELECT * FROM  user_notebook WHERE userid=#{userid} and tokenid=#{tokenid}
    </select>
    <select id="userAccount" resultType="com.nixer.nprox.entity.swarm.dto.UserAccount">
        SELECT
            address,
            nickname,
            imgurl,
            email,
            phone,
            total_cashout,
            total_get_bzz,
            total_send_bzz,
            bzz,
            ctime,
            utime,
            lastip
        FROM
            user_info UIF
                RIGHT JOIN swarm_user_total SUT ON SUT.userid = UIF.userid
        where   SUT.userid = #{userid}
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into nprox.user_notebook(address, remarks, create_date, userid,tokenid)
        values (#{address}, #{remarks}, now(), #{userid},#{tokenid})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into nprox.user_notebook(address, remarks, create_date, userid,tokenid)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.address}, #{entity.remarks}, #{entity.createDate}, #{entity.userid},#{entity.tokenid})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into nprox.user_notebook(address, remarks, create_date, userid)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.address}, #{entity.remarks}, #{entity.createDate}, #{entity.userid})
        </foreach>
        on duplicate key update
        address = values(address) , remarks = values(remarks) , create_date = values(create_date) , userid =
        values(userid)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update nprox.user_notebook
        <set>
            <if test="address != null and address != ''">
                address = #{address},
            </if>
            <if test="remarks != null and remarks != ''">
                remarks = #{remarks},
            </if>
            <if test="createDate != null">
                create_date = #{createDate},
            </if>
            <if test="userid != null">
                userid = #{userid},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from nprox.user_notebook
        where id = #{id}
    </delete>

</mapper>

