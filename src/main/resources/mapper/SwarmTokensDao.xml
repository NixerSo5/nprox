<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nixer.nprox.dao.SwarmTokensDao">

    <resultMap type="com.nixer.nprox.entity.SwarmTokens" id="SwarmTokensMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="tokenname" column="tokenname" jdbcType="VARCHAR"/>
        <result property="tokenimgurl" column="tokenimgurl" jdbcType="VARCHAR"/>
        <result property="cashoutlimit" column="cashoutlimit" jdbcType="VARCHAR"/>
        <result property="basenodelimit" column="basenodelimit" jdbcType="VARCHAR"/>
        <result property="cut" column="cut" jdbcType="INTEGER"/>
        <result property="gcd" column="gcd" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="SwarmTokensMap">
        select *
        from nprox.swarm_tokens
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="SwarmTokensMap">
        select id,
               tokenname,
               tokenimgurl,
               cashoutlimit,
               basenodelimit,
               cut
        from nprox.swarm_tokens limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="SwarmTokensMap">
        select
        id, tokenname, tokenimgurl, cashoutlimit, basenodelimit, cut
        from nprox.swarm_tokens
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="tokenname != null and tokenname != ''">
                and tokenname = #{tokenname}
            </if>
            <if test="tokenimgurl != null and tokenimgurl != ''">
                and tokenimgurl = #{tokenimgurl}
            </if>
            <if test="cashoutlimit != null">
                and cashoutlimit = #{cashoutlimit}
            </if>
            <if test="basenodelimit != null">
                and basenodelimit = #{basenodelimit}
            </if>
            <if test="cut != null">
                and cut = #{cut}
            </if>
        </where>
    </select>
    <select id="tokensList" resultType="com.nixer.nprox.entity.SwarmTokens">
        SELECT
        *
        FROM
        swarm_tokens
        where  1=1
    </select>
    <select id="tokenDetail" resultType="com.nixer.nprox.entity.SwarmTokens" >
        SELECT
            *
        FROM
            swarm_tokens
        where
            id = #{id}
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into nprox.swarm_tokens(tokenname, tokenimgurl, cashoutlimit, basenodelimit, cut)
        values (#{tokenname}, #{tokenimgurl}, #{cashoutlimit}, #{basenodelimit}, #{cut})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into nprox.swarm_tokens(tokenname, tokenimgurl, cashoutlimit, basenodelimit, cut)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.tokenname}, #{entity.tokenimgurl}, #{entity.cashoutlimit}, #{entity.basenodelimit}, #{entity.cut})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into nprox.swarm_tokens(tokenname, tokenimgurl, cashoutlimit, basenodelimit, cut)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.tokenname}, #{entity.tokenimgurl}, #{entity.cashoutlimit}, #{entity.basenodelimit}, #{entity.cut})
        </foreach>
        on duplicate key update
        tokenname = values(tokenname) , tokenimgurl = values(tokenimgurl) , cashoutlimit = values(cashoutlimit) ,
        basenodelimit = values(basenodelimit) , cut = values(cut)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update nprox.swarm_tokens
        <set>
            <if test="tokenname != null and tokenname != ''">
                tokenname = #{tokenname},
            </if>
            <if test="tokenimgurl != null and tokenimgurl != ''">
                tokenimgurl = #{tokenimgurl},
            </if>
            <if test="cashoutlimit != null">
                cashoutlimit = #{cashoutlimit},
            </if>
            <if test="basenodelimit != null">
                basenodelimit = #{basenodelimit},
            </if>
            <if test="cut != null">
                cut = #{cut},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from nprox.swarm_tokens
        where id = #{id}
    </delete>

</mapper>

